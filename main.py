import telebot
import random
import os
from telebot import types
from func import added_user, word_ru, translator, random_words, added_word, delete_word
from dotenv import load_dotenv
load_dotenv()

tg_token = os.getenv("TOKEN")
bot = telebot.TeleBot(tg_token)


class Command:
    ADD_WORD = "–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï"
    DELETE_WORD = "–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô"
    NEXT = "–î–∞–ª—å—à–µ ‚è≠"
    GO = "Let's GO!!!"


def guess_word(message):
        user_id = message.chat.id
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        global word
        word = word_ru(user_id=user_id) 
        word_en = translator(word)
        button_word_en = types.KeyboardButton(word_en)
        msg = f"–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ {word}"
        random_word = [types.KeyboardButton(word) for word in random_words()]
        buttons = [button_word_en] + random_word
        random.shuffle(buttons)
        button_next = types.KeyboardButton(Command.NEXT)
        button_add = types.KeyboardButton(Command.ADD_WORD)
        button_del = types.KeyboardButton(Command.DELETE_WORD)
        markup.add(*buttons, button_next, button_add, button_del)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
        return word_en

@bot.message_handler(commands=["start"])
def greeting(message):
    msg = (
    f"–ü—Ä–∏–≤–µ—Ç!üëã–î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.\n"
    f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–µ—à—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —Å–µ–±—è —Ç–µ–º–ø–µ. –£\n"
    f"—Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç—Ä–µ–Ω–∞–∂—ë—Ä, –∫–∞–∫\n"
    f"–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –∏ —Å–æ–±–∏—Ä–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è.\n"
    f"–î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø—Ä–æ–ª—å–∑—É–π—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏:\n"
    f"‚Ä¢ {Command.ADD_WORD}\n"
    f"‚Ä¢ {Command.DELETE_WORD}\n"
    f"–£–∂–µ –Ω–µ—Ç–µ—Ä–ø–∏—Ç—Å—è? –ñ–º–∏ {Command.GO}"
    )
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_add = types.KeyboardButton(Command.ADD_WORD)
    button_del = types.KeyboardButton(Command.DELETE_WORD)
    button_go = types.KeyboardButton(Command.GO)
    markup.add(button_go, button_add, button_del)
    bot.send_message(message.chat.id, msg, reply_markup=markup)
    added_user(message.chat.id)

@bot.message_handler(func=lambda message: message.text == Command.GO or message.text == Command.NEXT)
def pick_word(message):
    global word_en
    word_en = guess_word(message)
    bot.register_next_step_handler(message, callback_user)

@bot.callback_query_handler(func=lambda message: True)
def callback_user(message):
    if message.text == word_en:
        bot.send_message(message.chat.id, "–í–µ—Ä–Ω–æ!")
    elif message.text == Command.NEXT:
         pick_word(message)
    elif message.text == Command.ADD_WORD:
        request_word_add(message)
    elif message.text == Command.DELETE_WORD:
        request_word_del(message)
    else:
        bot.send_message(message.chat.id, f"–ù–µ –≤–µ—Ä–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ! –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ {word}")
        bot.register_next_step_handler(message, callback_user)
    
@bot.message_handler(func=lambda message: message.text == Command.ADD_WORD)
def request_word_add(message):
    bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ")
    bot.register_next_step_handler(message, added_user_word)
    
@bot.callback_query_handler(func=lambda message: True)
def added_user_word(message):
    added_word(id_user=message.chat.id, word=message.text)
    bot.send_message(message.chat.id, f"–°–ª–æ–≤–æ {message.text} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_add = types.KeyboardButton(Command.ADD_WORD)
    button_del = types.KeyboardButton(Command.DELETE_WORD)
    button_go = types.KeyboardButton(Command.GO)
    markup.add(button_go, button_add, button_del)

@bot.message_handler(func=lambda message: message.text == Command.DELETE_WORD)
def request_word_del(message):
    bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å")
    bot.register_next_step_handler(message,del_user_word)

@bot.callback_query_handler(func=lambda message: True)
def del_user_word(message):
    delete_word(id_user=message.chat.id, word=message.text)
    bot.send_message(message.chat.id, f"–°–ª–æ–≤–æ {message.text} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button_add = types.KeyboardButton(Command.ADD_WORD)
    button_del = types.KeyboardButton(Command.DELETE_WORD)
    button_go = types.KeyboardButton(Command.GO)
    markup.add(button_go, button_add, button_del)


if __name__ == "__main__":
    print("–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    bot.polling(non_stop=True)